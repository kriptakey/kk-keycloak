Disaster recovery
=================

On extraordinary situations such as database corruption or server failure, Kripta Key provides a way to recover
from such failure and to mitigate downtime. Administrators may set up and later promote a Disaster Recovery mode
KK-Manager instance to mitigate downtime. Administrators can also restore a KK-Manager backup to recover from
a server failure.


KK-Manager setup and configuration in Disaster Recovery (DR) mode
-----------------------------------------------------------------

During setup of KK-Manager, it can be set to run in Disaster Recovery (DR) mode. However, it is important to note
that registration of the KK-Manager-DR instances depends on the license applied to the deployment, as the license
limits the number of the KK-Manager-DR instances that can be registered.

KK-Manager-DR instances replicate all objects from the main KK-Manager instance. CLIKK can also be connected
to the KK-Manager-DR instances by using the ``clikk conf server`` command. When connected to a KK-Manager-DR instance,
CLIKK may only run list and info commands.

.. important::

    Before running the installer, perform :ref:`an integrity check <appendix:performing integrity checks>` first.
    Also, make sure that the installer is appropriate for the machine's OS.

.. note::

    If errors were encountered during installation, details will be logged to ``/var/log/kriptakey``.

.. note::

    Please contact support@klaviskripta.com if any problems were encountered during installation.


Before installing KK-Manager-DR
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

#.  Ensure that the server has been prepared as specified in :ref:`installation-guide/before-installing:preparatory steps`.

#.  If the smartcard reader's driver has not been installed yet, install that before starting KK-Manager's installer.

    #.  Download the smartcard reader driver (``acsccid-linux-bin-1.1.10-20230804.zip``) from `ACS's website`__.

        __ https://www.acs.com.hk/download-driver-unified/13546/acsccid-linux-bin-1.1.10-20230804.zip

    #.  Extract the package.

        .. code-block:: console

            $ unzip acsccid-linux-bin-1.1.10-20230804.zip

    #.  Navigate to the ``acsccid-linux-bin-1.1.10-20230804.zip/epel/9`` directory and install the RPM.

        .. code-block:: console

            $ cd ACS-Unified-PKG-Lnx-118-P/epel/9
            $ sudo dnf install pcsc-lite-acsccid-1.1.10-1.el9.x86_64.rpm

    #.  Enable the pcsc-lite service.

        .. code-block:: console

            $ sudo systemctl enable pcscd.service --now

    #.  Make sure that the pcsc-lite service is running by examining the output of the following command.

        .. code-block:: console

            $ sudo systemctl status pcscd.service

#.  Download the `Intel SGX Platform Software`__. Run the following commands from the directory
    where the archive is located:

    __ https://download.01.org/intel-sgx/sgx-linux/2.23/distro/rhel9.2-server/sgx_rpm_local_repo.tgz

    #.  Extract the packages.

        .. code-block:: console

            $ tar -xvf sgx_rpm_local_repo.tgz

    #.  Navigate to the ``sgx_rpm_local_repo`` directory, and enable the repository.

        .. code-block:: console

            $ cd sgx_rpm_local_repo
            $ sudo dnf config-manager --add-repo $(pwd)

            Updating Subscription Management repositories.
            Adding repo from: file:///home/user/sgx_rpm_local_repo


Installing KK-Manager-DR
~~~~~~~~~~~~~~~~~~~~~~~~

Once everything is all set, the administrator may begin installation of KK-Manager-DR on the server.

#.  Install KK-Manager from the RPM package. Note that KK-Manager depends on the packages in ``sgx_rpm_local_repo``.
    However, these packages are not signed with GPG. Hence, it must be installed without performing the GPG check.

    .. code-block:: console

        $ sudo dnf --nogpgcheck install kk-m-2.0-0000.el8.x86_64.rpm

    .. note::

        *   The installer automatically creates the user ``kripta``.
        *   The user ``kripta`` can only read files from the working directory.
        *   The administrator, using their usual user account, **cannot** write directly to the working directory.
            Files must be moved as the user ``kripta`` to the working directory.
        *   During the installation process, the location of the working directory must be specified.
            It is highly recommended to use the default value.

#.  After successfully installing KK-Manager, it must be configured by running its configuration script.
    This will configure settings such as port, log level, SNMP server, and so on. Do note the following
    when running the configuration script:

    *   The port may be any port from 1024 to 49151, inclusive.
    *   Configuring the SNMP server is optional --- errors are still recorded to the log file. However, it is
        strongly recommended to configure the SNMP server so that critical alerts from Kripta Key can be
        noticed promptly. To configure the SNMP server, the administrator must prepare the SNMP host and port,
        SNMP username, SNMP authentication passphrase, and SNMP privacy passphrase.
    *   For some configuration fields, the script will set a default value if value is omitted when prompted.
    *   The working directory must be writable by the ``kripta`` user. For this reason, it is recommended
        to use the default value, ``/var/local/kriptakey/kk-manager``.

    .. code-block:: console
        :caption: Sample output if SNMP server has not been configured.

        $ sudo /opt/kriptakey/kk-manager/kk-m.sh

        KK-Manager mode (Option: main/DR) [main]: DR
        Main KK-Manager host []: 10.30.0.116
        Main KK-Manager port []: 8086
        KK-Manager port for CLIKK endpoint [7002]: 8090
        KK-Manager port for KK-Cryptoservice and KK-Manager-DR endpoint [7003]: 8091
        SNMP server host and port in xxx.xxx.xxx.xxx:xxxx format []:
        WARNING: SNMP server address is empty. KK-Manager will not send SNMP alerts.
        KK-Manager log level (Option: ERROR/INFO/DEBUG) [ERROR]:
        KK-Manager working directory path [/var/local/kriptakey/kk-manager]:

        Relabeled /var/local/kriptakey/kk-manager from unconfined_u:object_r:var_t:s0 to system_u:object_r:kk_md_var_t:s0
        Relabeled /var/local/kriptakey/kk-manager/db from unconfined_u:object_r:var_t:s0 to system_u:object_r:kk_md_var_t:s0
        Relabeled /var/local/kriptakey/kk-manager/backup from unconfined_u:object_r:var_t:s0 to system_u:object_r:kk_md_var_t:s0
        Relabeled /var/local/kriptakey/kk-manager/sgxdata from unconfined_u:object_r:var_t:s0 to system_u:object_r:kk_md_var_t:s0
        Relabeled /etc/kriptakey/kk-md.conf from unconfined_u:object_r:etc_t:s0 to system_u:object_r:kk_md_var_t:s0

        WARNING: Configure your firewall to allow the KK-Manager service.

        Configuration file has been written successfully to /etc/kriptakey/kk-md.conf.

    .. code-block:: console
        :caption: Sample output if SNMP server has been configured.

        $ sudo /opt/kriptakey/kk-manager/kk-m.sh

        KK-Manager mode (Option: main/DR) [main]: main
        Main KK-Manager host []: 10.30.0.116
        Main KK-Manager port []: 8086
        KK-Manager port for CLIKK endpoint [7002]: 8090
        KK-Manager port for KK-Cryptoservice and KK-Manager-DR endpoint [7003]: 8091
        SNMP server host and port in xxx.xxx.xxx.xxx:xxxx format []: 192.168.0.5:1337
        SNMP username []: klavis
        SNMP authentication passphrase []: klavisauth
        SNMP privacy passphrase []: klavisencrypt
        KK-Manager log level (Option: ERROR/INFO/DEBUG) [ERROR]:
        KK-Manager working directory path [/var/local/kriptakey/kk-manager]:

        Relabeled /var/local/kriptakey/kk-manager from unconfined_u:object_r:var_t:s0 to system_u:object_r:kk_md_var_t:s0
        Relabeled /var/local/kriptakey/kk-manager/db from unconfined_u:object_r:var_t:s0 to system_u:object_r:kk_md_var_t:s0
        Relabeled /var/local/kriptakey/kk-manager/backup from unconfined_u:object_r:var_t:s0 to system_u:object_r:kk_md_var_t:s0
        Relabeled /var/local/kriptakey/kk-manager/sgxdata from unconfined_u:object_r:var_t:s0 to system_u:object_r:kk_md_var_t:s0
        Relabeled /etc/kriptakey/kk-md.conf from unconfined_u:object_r:etc_t:s0 to system_u:object_r:kk_md_var_t:s0

        WARNING: Configure your firewall to allow the KK-Manager service.

        Configuration file has been written successfully to /etc/kriptakey/kk-md.conf.

    .. note::

        *   To configure the SNMP server, please refer to :ref:`appendix:snmp configuration`.
        *   To unset the SNMP configuration, omit the SNMP destination when prompted by the script.

    .. important::

        The configuration file for KK-Manager is stored in ``/etc/kriptakey/kk-md.conf``. Do not move
        or remove the file to ensure the smooth operation of the service.

#.  If you choose to enable SNMP, there is additional step.
    Kripta Key appliance is accompanied by script that will send crucial system information (CPU, Memory and 
    Disk utilization) using SNMP if SNMP is configured. The script will automatically send SNMP message every minute. 
    To enable this script, execute command below:

    .. code-block:: console

        $ /opt/kriptakey/kk-sys_snmp.sh install
        
#.  Check the version of the daemon to ensure that KK-Manager has been installed properly.

    .. code-block:: console

        $ sudo -u kripta kk-md --version

        Module: kk-md
        Version: <version>

#.  Reload the firewall service and set the zone as shown below. You can set the zone to either public or private.

    .. code-block:: console

        $ sudo firewall-cmd --permanent --zone=public --add-service=kk-md

        success

        $ sudo firewall-cmd --reload

        success


Registering KK-Manager-DR
~~~~~~~~~~~~~~~~~~~~~~~~~

#.  Double check the license status to ensure that there's available quota for a KK-Manager-DR registration.

#.  Fetch the machine platform information. Run the following command on the KK-Manager-DR machine.

    .. code-block:: console

        $ sudo -u kripta kk-md --get-pck-id

        Platform information has been written successfully to /var/local/kriptakey/kk-manager/sgxdata/4DB1DC9FXXXXXXXXXXXXXXXXXXXXXXXX.json.

#.  Copy the platform information of the KK-Manager-DR machines to a device that has CLIKK installed.

#.  :ref:`Obtain an API key from Intel <appendix:obtaining intel api key>` if the administrator lacks one.
    This API key will be used to retrieve collateral from Intel using CLIKK. The collateral file contains information
    that attests that the hardware in use truly came from Intel, as opposed to being simulated.

#.  Run ``clikk conf get-collateral``, passing the API key and the path to the platform information to fetch
    the collateral for the KK-Manager-DR machine.

    .. important::

        The machine must be connected to the internet.

    .. code-block:: console

        $ clikk conf get-collateral --intel-api-key=39949131XXXXXXXXXXXXXXXXXXXXXXX --platform-info-path=/home/user/documents/4DB1DC9FXXXXXXXXXXXXXXXXXXXXXXXX.json --output-dir-path=/home/user/documents

        This will fetch attestation material from Intel's trusted web service:
            https://api.trustedservices.intel.com/sgx/certification/v4
        Type `9Kl/'` to continue, or press Enter to cancel.
        > 9Kl/'

        PCK certificate has been saved successfully to /home/user/documents/pck_cert_4DB1DC9FXXXXXXXXXXXXXXXXXXXXXXXX.pem.
        Quote collateral has been saved successfully to /home/user/documents/collateral_13E3CDXXXXXX.json.

#.  Copy the PCK certificate and collateral to the working directory of the KK-Manager-DR machine.

#.  Run KK-Manager in DR registration mode, passing in the path to the KK-Manager-DR machine's PCK certificate
    and the latest database backup file.

    .. important::

        Ensure the integrity of the backup file. Perform the following steps:

        *   Compute the hash of the backup file in the KK-Manager machine, preferably as soon as the backup is created.
        *   Compute the hash of the backup file in the KK-Manager-DR machine.
        *   Compare both hashes. Confirm that the hashes are the same before proceeding.

        To compute the hashes, use a tool such as ``sha256sum``.

    .. code-block:: console

        $ sudo -u kripta kk-md --add-dr --kk-manager-dr-pck-cert-path=/var/local/kriptakey/kk-manager/sgxdata/pck_cert_4DB1DC9FXXXXXXXXXXXXXXXXXXXXXXXXXXX.pem --kk-manager-dr-collateral-path=/var/local/kriptakey/kk-manager/sgxdata/collateral_13E3CDXXXXXX.json --database-backup-path=/path-to-backup-file/backup.db

        Commencing the KK-Manager-DR registration process.
        This will initialize a KK-Manager-DR instance on this machine and register it to the main KK-Manager instance.
        Do not interrupt the process until the message "KK-Manager-DR has been registered successfully to KK-Manager." appears.
        Are you sure you want to continue? Type `s@Hfr` to continue, or press Enter to cancel.
        > s@Hfr

        [-] Ready for initialization and registration.
        [-] Listening on port 8086...
        [-] Waiting for connection from KK-Manager...

#.  Register the KK-Manager-DR instance to the main KK-Manager instance using CLIKK, passing in the path
    to the collateral file obtained above.

    .. code-block:: console

        $ clikk kk-manager add-dr --kk-manager-collateral-path=home/user/documents/collateral_00A065XXXXXXX.json --kk-manager-dr-collateral-path=/home/user/documents/collateral_13E3CDXXXXXX.json --kk-manager-dr-host=10.30.0.2 --kk-manager-dr-port=8086 --kk-manager-dr-name=kk-m-drOne

        Enter admin ID: Admin1
        Enter password:
        Insert the administrator card of Admin1 for two-factor authentication.

        Dual control authentication -- credential of second user is required.
        Admin1 is currently logged in.

        Enter admin ID: Admin2
        Enter password:
        Insert the administrator card of Admin2 for two-factor authentication.

        KK-Manager-DR `kk-m-drOne` at 10.30.0.2 has been registered successfully.

#.  Once the registration process has been completed, KK-Manager-DR will show the following message:

    .. code-block:: console

        [v] KK-Manager-DR has been registered successfully to KK-Manager.

#.  Start the KK-Manager service, and check that it is running properly.

    .. code-block:: console

        $ sudo systemctl enable kk-md-dr.service --now

        $ sudo systemctl status kk-md-dr.service

#.  Ensure that the KK-Manager-DR instance is connected to the KK-Manager instance, using ``curl``
    with the KK-Manager host and port.

    .. code-block:: console

        $ curl -k -v 10.30.0.116 8086

#.  Whenever necessary, administrators may connect CLIKK to the KK-Manager-DR instance by running
    the configuration command.

    .. code-block:: console

        clikk conf server --kk-manager-host=10.30.0.18 --kk-manager port=1234

    While connected to a KK-Manager-DR instance, CLIKK can only execute list and info commands ---
    no :term:`CUD` commands may be executed.


KK-Manager-DR promotion
-----------------------

In the case where the main KK-Manager server goes down and is rendered inoperable, administrators may promote
a KK-Manager-DR instance to be the main KK-Manager instance. Follow these steps to promote a KK-Manager-DR instance:

#.  Run ``clikk kk-manager promote-dr`` to promote a KK-Manager-DR instance. CLIKK must be connected
    to the KK-Manager-DR instance that will be promoted. There are two variants of the command:

    *   To use the same KK-Auditor instance, use the following command:

        .. code-block:: console

            $ clikk kk-manager promote-dr --kk-auditor-host=127.0.0.1 --kk-auditor-port=8082

            Enter admin ID: Admin1
            Enter password:
            Insert the administrator card of Admin1 for two-factor authentication.

            Dual control authentication -- credential of second user is required.
            Admin1 is currently logged in.

            Enter admin ID: Admin2
            Enter password:
            Insert the administrator card of Admin2 for two-factor authentication.

            KK-Manager-DR has been promoted successfully to main KK-Manager.
            Please update the relevant configurations and restart the KK-Manager service.

    *   To use a new KK-Auditor instance, run the new KK-Auditor in registration mode.

        .. code-block:: console

            $ sudo -u kripta kk-ad --kk-auditor-pck-cert-path=/var/local/kriptakey/kk-auditor/sgxdata/pck_cert_0323BC80XXXXXXXXXXXXXXXXXXXXXXXX.pem

        Then, run the following command with CLIKK:

        .. code-block:: console

            $ clikk kk-manager promote-dr --kk-manager-collateral-path=/home/user/Documents/collateral_00A034XXXXXXXX.json --kk-auditor-collateral-pat=/home/user/Documents/collateral_00A034XXXXXXXX.json --kk-auditor-host=127.0.0.1 --kk-auditor-port=8082

            Enter admin ID: Admin1
            Enter password:
            Insert the administrator card of Admin1 for two-factor authentication.

            Dual control authentication -- credential of second user is required.
            Admin1 is currently logged in.

            Enter admin ID: Admin2
            Enter password:
            Insert the administrator card of Admin2 for two-factor authentication.

            KK-Manager-DR has been promoted successfully to main KK-Manager.
            Please update the relevant configurations and restart the KK-Manager service.

#.  Stop the KK-Manager-DR service.

    .. code-block:: console

        $ sudo systemctl stop kk-md-dr.service

#.  Run the KK-Manager configuration script to update the KK-Manager configuration file. Change the KK-Manager mode
    to main KK-Manager.

    .. code-block:: console

        $ sudo /opt/kriptakey/kk-manager/kk-m.sh

#.  Restart the KK-Manager service, and check that it is running properly.

    .. code-block:: console

        $ sudo systemctl enable kk-md.service --now

        $ sudo systemctl status kk-md.service

#.  For each KK-Cryptoservice instance, run the KK-Cryptoservice configuration script to update the KK-Manager
    host and port.

    .. code-block:: console

        $ sudo /opt/kriptakey/kk-cryptoservice/kk-cs.sh

#.  The promotion procedure is complete. As a KK-Manager-DR instance has been promoted to the main KK-Manager instance,
    it is highly recommended to set up a new KK-Manager-DR instance and register it to the main KK-Manager instance ---
    refer to :ref:`installation-guide/disaster-recovery:Registering KK-Manager-DR`.


Restoring KK-Manager from backup
--------------------------------

If KK-Manager-DR promotion is not an available option, administrators must restore the KK-Manager's database
from a backup. Backups may be created manually via CLIKK, or automatically by the main KK-Manager instance.
It is the administrator's responsibility to keep the backups off the KK-Manager machine to aovid unavailability
issues when the KK-Manager machine is inoperable and data is inaccessible.

.. important::

    Before restoring the backup file, ensure that the KK-Auditor and the KK-Manager service has been stopped.
    Run the command ``sudo systemctl stop kk-ad.service`` and ``sudo systemctl stop kk-md.service`` to stop
    the KK-Auditor service and the KK-Manager service, respectively.

To begin the restoration process, a backup file must be available on hand. Backups may be retrieved from the ``backup``
directory in the main KK-Manager's working directory. The restored KK-Manager instance can be configured to connect
to the existing KK-Auditor instance, or to a new KK-Auditor instance.

On top of the database backup file, restoration from backup also requires the following:

*   KK-Auditor machine's PCK certificate and collateral files
*   KK-Manager machine's PCK certificate and collateral files
*   A sufficient amount of recovery cards
*   If restoring to a different machine, a signed permission file from Klavis Kripta


Restoring to the same machine
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

*   If the administrator would like to connect the restored KK-Manager instance to a new KK-Auditor instance,
    the KK-Auditor machine must first be set up following the steps in :ref:`installation-guide/kripta-key-installation:kk-auditor setup and configuration`.

*   Run KK-Auditor in registration mode on the desired machine.

    .. code-block:: console

        $ sudo -u kripta kk-ad --kk-auditor-pck-cert-path=/var/local/kriptakey/kk-auditor/sgxdata/pck_cert_0323BC80XXXXXXXXXXXXXXXXXXXXXXXX.pem

        Commencing the KK-Auditor registration process.
        This will initialize a KK-Auditor instance on this machine and register it to the KK-Manager instance.
        Any existing KK-Auditor database file will be OVERWRITTEN.
        Do not interrupt the process until the message "KK-Auditor has been registered successfully to KK-Manager." appears.
        Are you sure you want to continue? Type `%\Ed_` to continue, or press Enter to cancel.
        > %\Ed_

        [-] Ready for initialization and registration.
        [-] Listening on port 8083...
        [-] Waiting for connection from KK-Manager...

*   Run KK-Manager in restoration mode. Note that this action requires a number of recovery cards,
    which will be specified by KK-Manager.

    .. code-block:: console

        Commencing the database restoration process.
        This will restore the KK-Manager database from a backup.
        Any existing KK-Manager database will be OVERWRITTEN.
        Do not interrupt the process until the message "KK-Manager backup has been restored successfully." appears.
        Re-run the restoration process if the message fails to appear.

        Are you sure you want to continue? Type `U|4+>` to continue, or press Enter to cancel.
        > U|4+>

        Enter the deployment ID, e.g., ENTERPRISE017048 
        Deployment ID: ENTERPRIXXXXXXXX
        Enter the secure channel code (SCC), e.g., 418XX...XX 
        Secure channel code: 92c78aa0XXXXXXXXXXXXXXXXXXXXXXXX

        Please prepare a sufficient number of healthy recovery cards.

        Key in the PIN and press Enter on the PIN pad to read the secure channel key encryption keys (SCKEKs).
        Total of 1 secret(s) recovered.
        Please insert the next recovery card

        Key in the PIN and press Enter on the PIN pad to read the secure channel key encryption keys (SCKEKs).
        Total of 2 secret(s) recovered.
        Please insert the next recovery card

        Key in the PIN and press Enter on the PIN pad to read the secure channel key encryption keys (SCKEKs).
        Total of 3 secret(s) recovered.

        A sufficient number of secrets have been recovered.
        Remove the card!
        KK-Manager backup has been restored successfully.
        Please restart the KK-Manager service and re-register all KK-Cryptoservice and KK-Manager-DR instances.

    Please refer to :ref:`installation-guide/disaster-recovery:Re-registering KK-Cryptoservice and KK-Manager-DR instances after restoration`
    for steps on re-registration.


Restoring to a different machine
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Unlike restoration to the same machine, restoring KK-Manager to a different machine requires a permission file
that is signed by Klavis Kripta. Follow these steps to obtain a restoration request file:

*   To restore it in a new machine, prepare a KK-Manager service in that new machine by referring to :ref:`installation-guide/kripta-key-installation:KK-Manager setup and configuration`.
*   Ensure the target machine has the PCK certificate and collateral. Generate a restoration request file by running the command below, passing in the path to the KK-Manager machine's
    PCK certificate and collateral files:

    .. code-block:: console

        $ sudo -u kripta kk-md --request-restore --kk-manager-pck-cert-path=/var/local/kriptakey/kk-manager/sgxdata/pck_cert_7AF8435A5CA5E004C802042EXXXXXXXX.pem --kk-manager-collateral-path=/var/local/kriptakey/kk-manager/sgxdata/collateral_00A0XXXXXXXX.json

        Commencing the restoration request generation process.
        This will generate a request file to restore a KK-Manager backup to a different machine.
        Do not interrupt the process until the message "KK-Manager restoration request has been generated successfully." appears.
        Re-run the process if you do not see the message.
        Are you sure you want to continue? Type `6?QHt` to continue, or press Enter to cancel.
        > 6?QHt

        [-] Generating KK-Manager restoration request...

        KK-Manager restoration request has been generated successfully.
        Restoration request has been written to /var/local/kriptakey/kk-manager/sgxdata/request.restore.

*   Send the restoration request file alone with the deployment ID via email to sales@klaviskripta.com.

*   Once the permission file has been received from Klavis Kripta, proceed with restoration as detailed in
    :ref:`installation-guide/disaster-recovery:Restoring to the same machine`. On the restoration step
    where KK-Manager is ran with the ``--restore`` flag, add in the flag ``--permission-file-path``,
    passing in the path to the received permission file.

    .. code-block:: console

        $ sudo -u kripta kk-md --restore –-kk-manager-pck-cert-path=/var/local/kriptakey/kk-manager/sgxdata/pck_cert_7AF8435A5CA5E004C802042EXXXXXXXX.pem --kk-manager-collateral-path=/var/local/kriptakey/kk-manager/sgxdata/collateral_00A0XXXXXXXX.json --recovery-card-threshold=3 --backup-file-path=/var/local/kriptakey/kk-manager/backup/KK-M-mar15-15:03.backup --kk-auditor-collateral-path=collateral_00A0XXXXXXXX.json --permission-file-path=/var/local/kriptakey/kk-manager/sgxdata/permission.file

        Commencing the database restoration process.
        This will restore the KK-Manager database from a backup.
        Any existing KK-Manager database will be OVERWRITTEN.
        Do not interrupt the process until the message "KK-Manager backup has been restored successfully." appears.
        Re-run the restoration process if the message fails to appear.

        Are you sure you want to continue? Type `U|4+>` to continue, or press Enter to cancel.
        > U|4+>

        Enter the deployment ID, e.g., ENTERPRISE017048 
        Deployment ID: ENTERPRIXXXXXXXX
        Enter the secure channel code (SCC), e.g., 418XX...XX 
        Secure channel code: 92c78aa0XXXXXXXXXXXXXXXXXXXXXXXX

        Please prepare a sufficient number of healthy recovery cards.

        Key in the PIN and press Enter on the PIN pad to read the secure channel key encryption keys (SCKEKs).
        Total of 1 secret(s) recovered.
        Please insert the next recovery card

        Key in the PIN and press Enter on the PIN pad to read the secure channel key encryption keys (SCKEKs).
        Total of 2 secret(s) recovered.
        Please insert the next recovery card

        Key in the PIN and press Enter on the PIN pad to read the secure channel key encryption keys (SCKEKs).
        Total of 3 secret(s) recovered.

        A sufficient number of secrets have been recovered.
        Remove the card!
        KK-Manager backup has been restored successfully.
        Please restart the KK-Manager service and re-register all KK-Cryptoservice and KK-Manager-DR instances.

    Please refer to :ref:`installation-guide/disaster-recovery:Re-registering KK-Cryptoservice and KK-Manager-DR instances after restoration`
    for steps on re-registration.


Re-registering KK-Cryptoservice and KK-Manager-DR instances after restoration
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

After restoration, it is necessary to re-register all Kripta Key modules to propagate the new information.
Follow these steps to perform re-registration correctly:

#.  Stop the KK-Cryptoservice and KK-Manager-DR services on the relevant machines.

    .. code-block:: console

        $ sudo systemctl stop kk-csd.service

        $ sudo systemctl stop kk-md-dr.service

#.  For each KK-Cryptoservice instance in operation:

    #.  Run the configuration script so that it connects to the restored KK-Manager instance.

        .. code-block:: console

            $ sudo /opt/kriptakey/kk-cryptoservice/kk-cs.sh

    #.  Run KK-Cryptoservice in registration mode.

        .. code-block:: console

            $ sudo -u kripta kk-csd --kk-cryptoservice-pck-cert=/var/local/kriptakey/kk-cryptoservice/sgxdata/pck_cert_39288AC7XXXXXXXXXXXXXXXXXXXXXXXX.pem --database-backup-path=/path-to-database-backup/backup.db

    #.  Register the KK-Cryptoservice instance using CLIKK.

        .. code-block:: console

            $ clikk kk-cryptoservice add --kk-manager-collateral-path=/home/user/documents/collateral_00A065XXXXXX.json --kk-cryptoservice-collateral-path=/home/user/documents/collateral_0BF32AXXXXXX.json --kk-cryptoservice-host=10.30.0.2 --kk-cryptoservice-port=8086 --kk-cryptoservice-name=kk-csOne

    #.  Start the KK-Cryptoservice service.

        .. code-block:: console

            $ sudo systemctl enable kk-csd.service --now

#.  For each KK-Manager-DR instance in operation:

    #.  Run the configuration script so that it connects to the restored KK-Manager instance.

        .. code-block:: console

            $ sudo /opt/kriptakey/kk-manager/kk-m.sh

    #.  Run KK-Manager in DR registration mode.

        .. code-block:: console

            $ sudo -u kripta kk-md --register-dr --kk-manager-dr-pck-cert-path=/var/local/kriptakey/kk-manager/sgxdata/pck_cert_4DB1DC9FXXXXXXXXXXXXXXXXXXXXXXXXXXX.pem --kk-manager-dr-collateral-path=/var/local/kriptakey/kk-manager/sgxdata/collateral_13E3CDXXXXXX.json --database-backup-path=/path-to-backup-file/backup.db

    #.  Register the KK-Manager-DR instance using CLIKK.

        .. code-block:: console

            $ clikk kk-manager add-dr --kk-manager-collateral-path=home/user/documents/collateral_00A065XXXXXXX.json --kk-manager-dr-collateral-path=/home/user/documents/collateral_13E3CDXXXXXX.json --kk-manager-dr-host=10.30.0.2 --kk-manager-dr-port=8086 --kk-manager-dr-name=kk-m-drOne

    #.  Start the KK-Manager-DR service.

        .. code-block:: console

            $ sudo systemctl enable kk-md-dr.service --now

For more details, refer to :ref:`installation-guide/cryptographic-service-installation:registering kk-cryptoservice`
and :ref:`installation-guide/disaster-recovery:registering kk-manager-dr`.
